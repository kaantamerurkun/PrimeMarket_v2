@model PrimeMarket.Models.Listing
@{
    ViewData["Title"] = "Listing Details";
    Layout = null;
    var userName = Context.Session.GetString("AdminUsername") ?? "Admin";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"] - PrimeMarket Admin</title>
    <link rel="stylesheet" href="~/css/AdminDashboard.css" />
    <link rel="stylesheet" href="/css/notificationstyle.css" />
    <style>
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .back-link {
            display: inline-flex;
            align-items: center;
            gap: 5px;
            padding: 8px 15px;
            background-color: #f0f0f0;
            color: #333;
            border-radius: 5px;
            text-decoration: none;
            margin-bottom: 20px;
        }

        .listing-container {
            display: flex;
            gap: 30px;
            margin-bottom: 30px;
        }

        .image-gallery {
            flex: 0 0 50%;
        }

        .main-image {
            width: 100%;
            height: 400px;
            object-fit: cover;
            border-radius: 10px;
            margin-bottom: 10px;
        }

        .thumbnail-container {
            display: flex;
            gap: 10px;
            overflow-x: auto;
            padding-bottom: 10px;
        }

            .thumbnail-container img {
                width: 80px;
                height: 80px;
                object-fit: cover;
                border-radius: 5px;
                cursor: pointer;
                transition: transform 0.3s ease;
            }

                .thumbnail-container img:hover {
                    transform: scale(1.05);
                }

        .listing-details {
            flex: 1;
        }

        .listing-title {
            margin: 0 0 15px 0;
            font-size: 24px;
        }

        .listing-price {
            font-size: 24px;
            font-weight: bold;
            color: #0066cc;
            margin-bottom: 20px;
        }

        .detail-section {
            margin-bottom: 20px;
        }

            .detail-section h3 {
                margin: 0 0 10px 0;
                font-size: 18px;
                border-bottom: 1px solid #ddd;
                padding-bottom: 5px;
            }

        .detail-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #f0f0f0;
        }

        .detail-label {
            font-weight: bold;
            color: #555;
        }

        .detail-value {
            color: #333;
        }

        .description-section {
            margin-top: 30px;
        }

            .description-section h3 {
                margin: 0 0 15px 0;
                font-size: 18px;
            }

        .description-content {
            line-height: 1.6;
            color: #333;
            margin-bottom: 30px;
        }

        .seller-info {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
        }

            .seller-info h3 {
                margin: 0 0 15px 0;
                font-size: 18px;
            }

        .seller-details {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .seller-image {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            object-fit: cover;
        }

        .seller-name {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .seller-email, .seller-phone {
            color: #666;
            font-size: 14px;
        }

        .admin-actions {
            background-color: #f0f7ff;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
        }

            .admin-actions h3 {
                margin: 0 0 15px 0;
                font-size: 18px;
                color: #0066cc;
            }

        .action-buttons {
            display: flex;
            gap: 15px;
        }

        .btn-approve {
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
        }

        .btn-reject {
            padding: 10px 20px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
        }

        .rejection-form {
            margin-top: 20px;
            display: none;
        }

            .rejection-form label {
                display: block;
                margin-bottom: 8px;
                font-weight: bold;
            }

            .rejection-form select {
                width: 100%;
                padding: 10px;
                margin-bottom: 15px;
                border: 1px solid #ddd;
                border-radius: 5px;
            }

            .rejection-form textarea {
                width: 100%;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 5px;
                resize: vertical;
                min-height: 100px;
                margin-bottom: 15px;
            }

        .btn-confirm-reject {
            padding: 10px 20px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .alert {
            padding: 12px 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
        }
    </style>
</head>
<body>
    <header class="main-header">
        <div class="header-content">
            <a asp-action="AdminDashboard" asp-controller="Admin" class="logo">
                <img style="height: 50px; width: 100px; background-color: #f0f8ff" src="/images/PrimeMarket_Logo_V2.png" alt="PrimeMarket Logo" />
            </a>
            <div class="header-actions">
                <a asp-action="Logout" asp-controller="Admin"><button class="btn-logoutadmin">Logout</button></a>
                <p>@userName</p>

                <!-- Notification Bell -->
                <div class="notification-wrapper">
                    <img id="listingNotificationBell" class="notification-icon" style="margin-top:10px; height: 25px; width: 25px; cursor: pointer;" src="/images/NotificationBell.png" alt="Notification Bell" />
                    <div id="listingNotificationDropdown" class="notification-dropdown">
                        <p class="notification-item">An item is waiting to be approved or rejected</p>
                        <p class="notification-item">A user sent ID for verification.</p>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="dashboard">
        <div class="sidebar">
            <ul>
                <li onclick="window.location.href='@Url.Action("PendingVerifications", "Admin")'" class="nav-item">User ID Verifications</li>
                <li onclick="window.location.href='@Url.Action("PendingListings", "Admin")'" class="nav-item active">Pending Listings</li>
                <li onclick="window.location.href='@Url.Action("UsageReport", "Admin")'" class="nav-item">Usage Report</li>
            </ul>
        </div>

        <div class="dashboard-content">
            <div class="container">
                <a href="@Url.Action("PendingListings", "Admin")" class="back-link">
                    <i class="fas fa-arrow-left"></i> Back to Pending Listings
                </a>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessage"]
                    </div>
                }

                <div class="listing-container">
                    <div class="image-gallery">
                        @if (Model.Images != null && Model.Images.Any())
                        {
                            var mainImage = Model.Images.FirstOrDefault(i => i.IsMainImage)?.ImagePath ?? Model.Images.First().ImagePath;
                            <img src="@mainImage" alt="@Model.Title" class="main-image" id="main-image">

                            <div class="thumbnail-container">
                                @foreach (var image in Model.Images)
                                {
                                    <img src="@image.ImagePath" alt="@Model.Title" class="thumbnail" onclick="changeMainImage('@image.ImagePath')">
                                }
                            </div>
                        }
                        else
                        {
                            <img src="/images/placeholder.png" alt="No Image Available" class="main-image">
                        }
                    </div>

                    <div class="listing-details">
                        <h1 class="listing-title">@Model.Title</h1>
                        <p class="listing-price">@Model.Price.ToString("C")</p>

                        <div class="admin-actions">
                            <h3>Admin Review</h3>
                            <div class="action-buttons">
                                <form asp-action="ApproveListing" asp-controller="Admin" method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@Model.Id">
                                    <button type="submit" class="btn-approve">Approve Listing</button>
                                </form>
                                <button class="btn-reject" id="show-rejection-form">Reject Listing</button>
                            </div>

                            <div class="rejection-form" id="rejection-form">
                                <form asp-action="RejectListing" asp-controller="Admin" method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@Model.Id">

                                    <label for="rejectionReason">Rejection Reason</label>
                                    <textarea name="rejectionReason" id="rejection-reason" required placeholder="Please provide a reason for rejection"></textarea>
                                    <button type="submit" class="btn-confirm-reject">Confirm Rejection</button>
                                </form>
                            </div>
                        </div>

                        <div class="detail-section">
                            <h3>Listing Details</h3>
                            <div class="detail-item">
                                <span class="detail-label">Condition</span>
                                <span class="detail-value">@Model.Condition</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Category</span>
                                <span class="detail-value">@Model.Category</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Subcategory</span>
                                <span class="detail-value">@Model.SubCategory</span>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.DetailCategory))
                            {
                                <div class="detail-item">
                                    <span class="detail-label">Detail Category</span>
                                    <span class="detail-value">@Model.DetailCategory</span>
                                </div>
                            }
                            <div class="detail-item">
                                <span class="detail-label">Location</span>
                                <span class="detail-value">@Model.Location</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Listed Date</span>
                                <span class="detail-value">@(((DateTime)Model.CreatedAt).ToString("MMMM dd, yyyy"))</span>
                            </div>
                        </div>

                        @if (ViewBag.Product != null)
                        {
                            <div class="detail-section">
                                <h3>Product Specifications</h3>
                                @foreach (var prop in ViewBag.Product.GetType().GetProperties())
                                {
                                    if (prop.Name != "Id" && prop.Name != "ListingId" && prop.Name != "Listing")
                                    {
                                        var value = prop.GetValue(ViewBag.Product);
                                        if (value != null && !string.IsNullOrEmpty(value.ToString()))
                                        {
                                            <div class="detail-item">
                                                <span class="detail-label">@prop.Name</span>
                                                <span class="detail-value">@value</span>
                                            </div>
                                        }
                                    }
                                }
                            </div>
                        }

                        <div class="seller-info">
                            <h3>Seller Information</h3>
                            <div class="seller-details">
                                <img src="@(string.IsNullOrEmpty(Model.Seller?.ProfileImagePath) ? "/images/user-placeholder.png" : Model.Seller.ProfileImagePath)" alt="Seller" class="seller-image">
                                <div>
                                    <p class="seller-name">@Model.Seller?.FirstName @Model.Seller?.LastName</p>
                                    <p class="seller-email">@Model.Seller?.Email</p>
                                    @if (!string.IsNullOrEmpty(Model.Seller?.PhoneNumber))
                                    {
                                        <p class="seller-phone">@Model.Seller?.PhoneNumber</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="description-section">
                    <h3>Description</h3>
                    <div class="description-content">
                        @Html.Raw(Model.Description.Replace("\n", "<br>"))
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function changeMainImage(imageSrc) {
            document.getElementById('main-image').src = imageSrc;
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Toggle notification dropdown
            const notificationBell = document.getElementById('listingNotificationBell');
            const notificationDropdown = document.getElementById('listingNotificationDropdown');

            if (notificationBell && notificationDropdown) {
                notificationBell.addEventListener('click', function(e) {
                    e.stopPropagation();
                    notificationDropdown.style.display = notificationDropdown.style.display === 'block' ? 'none' : 'block';
                });

                document.addEventListener('click', function(event) {
                    if (!notificationDropdown.contains(event.target) && event.target !== notificationBell) {
                        notificationDropdown.style.display = 'none';
                    }
                });
            }

            // Show/hide rejection form
            const showRejectionFormBtn = document.getElementById('show-rejection-form');
            const rejectionForm = document.getElementById('rejection-form');

            if (showRejectionFormBtn && rejectionForm) {
                showRejectionFormBtn.addEventListener('click', function() {
                    rejectionForm.style.display = rejectionForm.style.display === 'block' ? 'none' : 'block';
                    this.textContent = rejectionForm.style.display === 'block' ? 'Cancel' : 'Reject Listing';
                });
            }
        });
    </script>
</body>
</html>