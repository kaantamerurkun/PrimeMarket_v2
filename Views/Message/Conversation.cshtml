@model PrimeMarket.Models.ViewModel.DetailedConversationViewModel
@{
    ViewData["Title"] = "Conversation";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="container" style="margin-top: 120px; margin-bottom: 50px; max-width: 85%; margin-left: auto; margin-right: auto;">
    <div class="conversation-header" style="border-radius: 50px; background-color: #f8f9fa; padding: 15px; margin-bottom: 20px;">
        <a href="@Url.Action("Conversations")" class="back-link" style="border-radius: 50px;">
            <i class="fas fa-arrow-left"></i> Back to Messages
        </a>
        <div class="listing-info">
            <div class="listing-image">
                <img src="@(string.IsNullOrEmpty(Model.ListingImage) ? "/images/placeholder.png" : Model.ListingImage)"
                     alt="Listing Image" width="80" height="80" style="border-radius: 20px;">
            </div>
            <div class="listing-details">
                <h3>@Model.ListingTitle</h3>
                <p class="listing-price">@Model.ListingPrice.ToString("C")</p>
                <a href="@Url.Action("Details", "Listing", new { id = Model.ListingId })" target="_blank" style="border-radius: 50px; display: inline-block; padding: 5px 15px; background-color: #f0f0f0; text-decoration: none; color: #333;">View Listing</a>
            </div>
        </div>
    </div>

    <div class="chat-container" style="border-radius: 25px; overflow: hidden;">
        <div class="chat-messages" id="chatMessages" style="border-radius: 25px 25px 0 0;">
            @if (Model.Messages.Count == 0)
            {
                <div class="no-messages" style="border-radius: 25px;">
                    <p>No messages yet. Start the conversation!</p>
                </div>
            }
            else
            {
                @foreach (var message in Model.Messages)
                {
                    <div class="message @(message.SentByMe ? "you" : "")" style="margin-bottom: 20px;">
                        <img src="@(message.SentByMe ?
                               (string.IsNullOrEmpty(ViewBag.CurrentUserImage) ? "/images/PrimeMarket_Logo_V2.png" : ViewBag.CurrentUserImage) :
                               (string.IsNullOrEmpty(Model.OtherUserProfileImage) ? "/images/PrimeMarket_Logo_V2.png" : Model.OtherUserProfileImage))"
                             alt="@(message.SentByMe ? "You" : Model.OtherUserName)"
                             style="width: 40px; height: 40px; border-radius: 50%;">
                       
                        <div class="message-content" style="border-radius: 25px; max-width: 80%;">
                            @Html.Raw(message.Content)
                            <div class="message-time">@message.Timestamp.ToString("MMM dd, yyyy HH:mm")</div>
                        </div>
                    </div>
                }
            }
        </div>

        <div class="chat-input" style="border-radius: 0 0 25px 25px;">
            <form id="messageForm" method="post" action="@Url.Action("SendMessage")">
                <input type="hidden" id="receiverId" name="ReceiverId" value="@Model.OtherUserId">
                <input type="hidden" id="listingId" name="ListingId" value="@Model.ListingId">
                <input type="hidden" id="currentUserId" value="@Model.CurrentUserId">
                <input type="hidden" id="currentUserImage" value="@ViewBag.CurrentUserImage">

                <input type="text" id="messageInput" name="Content" placeholder="Type your message here..." required style="border-radius: 50px;">
                <button type="submit" class="send-btn" style="border-radius: 50px;">Send</button>
            </form>
        </div>
    </div>
</div>

<style>
    .conversation-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #ddd;
    }

    .back-link {
        display: inline-block;
        padding: 8px 15px;
        background-color: #f0f0f0;
        border-radius: 20px;
        color: #333;
        text-decoration: none;
        transition: all 0.3s ease;
    }

        .back-link:hover {
            background-color: #e0e0e0;
        }

    .listing-info {
        display: flex;
        align-items: center;
    }

    .listing-image {
        margin-right: 15px;
    }

    .listing-details h3 {
        margin: 0 0 5px 0;
        font-size: 18px;
    }

    .listing-price {
        font-weight: bold;
        color: #0066cc;
        margin: 0 0 5px 0;
    }

    .chat-container {
        display: flex;
        flex-direction: column;
        height: 500px;
        border: 1px solid #ddd;
        border-radius: 25px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .chat-messages {
        flex: 1;
        overflow-y: auto;
        padding: 20px;
        background-color: #f9f9f9;
    }

    .no-messages {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        color: #888;
        background-color: #f0f7ff;
        padding: 20px;
        text-align: center;
    }

    .message {
        display: flex;
        margin-bottom: 15px;
        align-items: flex-start;
    }

        .message img {
            margin-right: 10px;
        }

        .message.you {
            flex-direction: row-reverse;
            justify-content: flex-start;
        }

            .message.you img {
                margin-right: 0;
                margin-left: 10px;
            }

    .message-content {
        background-color: white;
        padding: 12px 18px;
        border-radius: 18px;
        box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        max-width: 70%;
        word-wrap: break-word;
    }

    .message.you .message-content {
        background-color: #0066cc;
        color: white;
    }

    .message-time {
        font-size: 12px;
        color: #888;
        margin-top: 5px;
        text-align: right;
    }

    .message.you .message-time {
        color: #ccc;
    }

    .chat-input {
        padding: 15px;
        background-color: white;
        border-top: 1px solid #ddd;
    }

        .chat-input form {
            display: flex;
        }

        .chat-input input[type="text"] {
            flex: 1;
            padding: 12px 20px;
            border: 1px solid #ddd;
            border-radius: 24px;
            outline: none;
            font-size: 16px;
        }

            .chat-input input[type="text"]:focus {
                border-color: #0066cc;
            }

    .send-btn {
        margin-left: 10px;
        padding: 12px 25px;
        background-color: #0066cc;
        color: white;
        border: none;
        border-radius: 24px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        font-weight: bold;
    }

        .send-btn:hover {
            background-color: #0055b3;
        }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Scroll to bottom of chat
        const chatMessages = document.getElementById('chatMessages');
        chatMessages.scrollTop = chatMessages.scrollHeight;

        // Handle form submission with AJAX
        const messageForm = document.getElementById('messageForm');
        messageForm.addEventListener('submit', function(e) {
            e.preventDefault();

            const messageInput = document.getElementById('messageInput');
            const receiverId = document.getElementById('receiverId').value;
            const listingId = document.getElementById('listingId').value;
            const content = messageInput.value.trim();

            if (!content) return;

            const formData = {
                receiverId: receiverId,
                listingId: listingId,
                content: content
            };

            fetch('/Message/SendMessageAjax', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Add message to chat
                    const currentUserImage = document.getElementById('currentUserImage').value || '/images/PrimeMarket_Logo_V2.png';

                    const messageDiv = document.createElement('div');
                    messageDiv.className = 'message you';
                    messageDiv.style.marginBottom = '20px';

                    const timestamp = new Date(data.message.timestamp);
                    const formattedTime = timestamp.toLocaleString('en-US', {
                        month: 'short',
                        day: '2-digit',
                        year: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit',
                        hour12: false
                    });

                    messageDiv.innerHTML = `
                        <img src="${currentUserImage}" alt="You" style="width: 40px; height: 40px; border-radius: 50%;">
                        <div class="message-content" style="border-radius: 25px; max-width: 80%;">
                            ${data.message.content}
                            <div class="message-time">${formattedTime}</div>
                        </div>
                    `;

                    chatMessages.appendChild(messageDiv);
                    chatMessages.scrollTop = chatMessages.scrollHeight;

                    // Clear input
                    messageInput.value = '';
                }
            })
            .catch(error => {
                console.error('Error sending message:', error);
            });
        });
    });
</script>