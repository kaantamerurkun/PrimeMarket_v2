<!-- MyPurchases.cshtml -->
<style>
    .my-purchases-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .empty-purchases {
        text-align: center;
        padding: 50px;
        background-color: #f8f9fa;
        border-radius: 10px;
        margin-top: 20px;
    }

        .empty-purchases i {
            font-size: 50px;
            color: #ddd;
            margin-bottom: 20px;
        }

        .empty-purchases h2 {
            margin-bottom: 10px;
            color: #333;
        }

        .empty-purchases p {
            margin-bottom: 20px;
            color: #666;
        }

    .btn-browse {
        display: inline-block;
        padding: 10px 20px;
        background-color: #0066cc;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .btn-browse:hover {
            background-color: #0055b3;
        }

    .purchases-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .purchase-item {
        display: flex;
        background-color: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .purchase-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .purchase-image {
        flex: 0 0 150px;
        overflow: hidden;
    }

        .purchase-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .purchase-details {
        flex: 1;
        padding: 15px;
        position: relative;
    }

        .purchase-details h3 {
            margin: 0 0 10px 0;
            font-size: 18px;
        }

    .seller {
        color: #666;
        margin-bottom: 5px;
    }

    .purchase-date, .purchase-quantity {
        color: #666;
        font-size: 14px;
        margin-bottom: 5px;
    }

    .purchase-price {
        font-weight: bold;
        color: #0066cc;
        margin-bottom: 10px;
    }

    .payment-status {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 12px;
        margin-bottom: 10px;
    }

        .payment-status.authorized {
            background-color: #fff3cd;
            color: #856404;
        }

        .payment-status.completed {
            background-color: #d4edda;
            color: #155724;
        }

        .payment-status.refunded {
            background-color: #f8d7da;
            color: #721c24;
        }

    .purchase-actions {
        display: flex;
        gap: 10px;
        margin-top: 10px;
    }

    .btn-view {
        padding: 8px 15px;
        background-color: #f0f0f0;
        color: #333;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        font-size: 14px;
        transition: background-color 0.3s ease;
    }

        .btn-view:hover {
            background-color: #e0e0e0;
        }

    .alert {
        padding: 12px 15px;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    @@media (max-width: 768px) {
        .purchase-item

    {
        flex-direction: column;
    }

    .purchase-image {
        height: 180px;
        flex: none;
    }

    }
</style>
@model List<PrimeMarket.Models.ViewModel.PurchaseViewModel>
@{
    ViewData["Title"] = "My Purchases";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="container" style="margin-top: 120px; margin-bottom: 50px;">
    <div class="my-purchases-header">
        <h1>My Purchases</h1>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="purchases-container">
        @if (Model == null || Model.Count == 0)
        {
            <div class="empty-purchases">
                <i class="fas fa-shopping-bag"></i>
                <h2>You haven't made any purchases yet</h2>
                <p>Browse listings and start shopping.</p>
                <a href="@Url.Action("User_MainPage", "User")" class="btn-browse">Browse Listings</a>
            </div>
        }
        else
        {
            <div class="purchases-list">
                @foreach (var purchase in Model)
                {
                    <div class="purchase-item">
                        <div class="purchase-image">
                            <img src="@purchase.ListingImage" alt="@purchase.ListingTitle">
                        </div>
                        <div class="purchase-details">
                            <h3>@purchase.ListingTitle</h3>
                            <p class="seller">Seller: @purchase.SellerName</p>
                            <p class="purchase-date">Purchased: @purchase.PurchaseDate.ToString("MMMM dd, yyyy")</p>
                            @if (purchase.Quantity > 1)
                            {
                                <p class="purchase-quantity">Quantity: @purchase.Quantity</p>
                                <p class="purchase-price">@purchase.UnitPrice.ToString("C") × @purchase.Quantity = @purchase.Amount.ToString("C")</p>
                            }
                            else
                            {
                                <p class="purchase-price">@purchase.Amount.ToString("C")</p>
                            }
                            <p class="payment-status @purchase.PaymentStatus.ToString().ToLower()">
                                Status: <span>@purchase.PaymentStatus.ToString()</span>
                            </p>
                        </div>
                        <div class="purchase-actions">
                            <a href="@Url.Action("PurchaseStatus", "Payment", new { purchaseId = purchase.PurchaseId })" class="btn-view">
                                View Purchase
                            </a>
                            <a href="@Url.Action("Details", "Listing", new { id = purchase.ListingId })" class="btn-view">
                                View Listing
                            </a>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>