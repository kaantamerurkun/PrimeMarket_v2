<!-- MySales.cshtml -->
<style>
    .my-sales-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .sales-summary {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .stat-value {
        font-size: 24px;
        font-weight: bold;
        color: #0066cc;
        margin-bottom: 5px;
    }

    .stat-label {
        color: #666;
        font-size: 14px;
    }

    .empty-sales {
        text-align: center;
        padding: 50px;
        background-color: #f8f9fa;
        border-radius: 10px;
        margin-top: 20px;
    }

        .empty-sales i {
            font-size: 50px;
            color: #ddd;
            margin-bottom: 20px;
        }

        .empty-sales h2 {
            margin-bottom: 10px;
            color: #333;
        }

        .empty-sales p {
            margin-bottom: 20px;
            color: #666;
        }

    .btn-create {
        display: inline-block;
        padding: 10px 20px;
        background-color: #0066cc;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .btn-create:hover {
            background-color: #0055b3;
        }

    .sales-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .sale-item {
        display: flex;
        background-color: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .sale-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .sale-image {
        flex: 0 0 150px;
        overflow: hidden;
    }

        .sale-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .sale-details {
        flex: 1;
        padding: 15px;
        position: relative;
    }

        .sale-details h3 {
            margin: 0 0 10px 0;
            font-size: 18px;
        }

    .buyer {
        color: #666;
        margin-bottom: 5px;
    }

    .sale-date, .sale-quantity {
        color: #666;
        font-size: 14px;
        margin-bottom: 5px;
    }

    .sale-price {
        font-weight: bold;
        color: #0066cc;
        margin-bottom: 10px;
    }

    .payment-status {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 12px;
        margin-bottom: 10px;
    }

        .payment-status.authorized {
            background-color: #fff3cd;
            color: #856404;
        }

        .payment-status.completed {
            background-color: #d4edda;
            color: #155724;
        }

        .payment-status.refunded {
            background-color: #f8d7da;
            color: #721c24;
        }

    .sale-actions {
        display: flex;
        gap: 10px;
        margin-top: 10px;
    }

    .btn-view {
        padding: 8px 15px;
        background-color: #f0f0f0;
        color: #333;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        font-size: 14px;
        transition: background-color 0.3s ease;
    }

        .btn-view:hover {
            background-color: #e0e0e0;
        }

    @@media (max-width: 768px) {
        .sales-summary

    {
        grid-template-columns: 1fr 1fr;
    }

    .sale-item {
        flex-direction: column;
    }

    .sale-image {
        height: 180px;
        flex: none;
    }

    }

    @@media (max-width: 480px) {
        .sales-summary

    {
        grid-template-columns: 1fr;
    }

    }
</style>
@model List<PrimeMarket.Models.ViewModel.SaleViewModel>
@{
    ViewData["Title"] = "My Sales";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="container" style="margin-top: 120px; margin-bottom: 50px;">
    <div class="my-sales-header">
        <h1>My Sales</h1>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

@*     <div class="sales-summary">
        <div class="stat-card">
            <div class="stat-value">@Model.Count</div>
            <div class="stat-label">Total Sales</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Sum(s => s.Amount).ToString("C")</div>
            <div class="stat-label">Total Revenue</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@(Model.Any() ? Model.Average(s => s.Amount).ToString("C") : "$0.00")</div>
            <div class="stat-label">Average Sale</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Sum(s => s.Quantity)</div>
            <div class="stat-label">Total Items Sold</div>
        </div>
    </div> *@

    <div class="sales-container">
        @if (Model == null || Model.Count == 0)
        {
            <div class="empty-sales">
                <i class="fas fa-tags"></i>
                <h2>You haven't made any sales yet</h2>
                <p>Create listings to start selling your items.</p>
                <a href="@Url.Action("CreateListing", "User")" class="btn-create">Create a Listing</a>
            </div>
        }
        else
        {
            <div class="sales-list">
                @foreach (var sale in Model)
                {
                    <div class="sale-item">
                        <div class="sale-image">
                            <img src="@sale.ListingImage" alt="@sale.ListingTitle">
                        </div>
                        <div class="sale-details">
                            <h3>@sale.ListingTitle</h3>
                            <p class="buyer">Buyer: @sale.BuyerName</p>
                            <p class="sale-date">Sold: @sale.SaleDate.ToString("MMMM dd, yyyy")</p>
                            @if (sale.Quantity > 1)
                            {
                                <p class="sale-quantity">Quantity: @sale.Quantity</p>
                                <p class="sale-price">@sale.UnitPrice.ToString("C") × @sale.Quantity = @sale.Amount.ToString("C")</p>
                            }
                            else
                            {
                                <p class="sale-price">@sale.Amount.ToString("C")</p>
                            }
                            <p class="payment-status @sale.PaymentStatus.ToString().ToLower()">
                                Status: <span>@sale.PaymentStatus.ToString()</span>
                            </p>
                        </div>
                        <div class="sale-actions">
                            <a href="@Url.Action("PurchaseStatus", "Payment", new { purchaseId = sale.PurchaseId })" class="btn-view">
                                View Sale Details
                            </a>
                            <a href="@Url.Action("Details", "Listing", new { id = sale.ListingId })" class="btn-view">
                                View Listing
                            </a>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>