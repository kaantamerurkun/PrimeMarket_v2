@model PrimeMarket.Models.Listing
@{
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    ViewData["Title"] = "My Listing";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        .main-image {
        width: 100%;
        height: 400px;
        object-fit: cover;
        border-radius: 10px;
        margin-bottom: 10px;
        }

        .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 5px;
        cursor: pointer;
        transition: transform 0.3s ease;
        }

        .thumbnail:hover {
        transform: scale(1.05);
        }

        .property-details {
        flex: 0 0 35%;
        }

        .detail-item {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #f0f0f0;
        }

        .label {
        font-weight: bold;
        color: #555;
        }

        .value {
        color: #333;
        }

        /* Status Tags */
        .listing-status {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 14px;
        font-weight: bold;
        margin-left: 15px;
        }

        .pending {
        background-color: #ffc107;
        color: #212529;
        }

        .approved {
        background-color: #28a745;
        color: white;
        }

        .rejected {
        background-color: #dc3545;
        color: white;
        }

        .sold {
        background-color: #17a2b8;
        color: white;
        }

        .archived {
        background-color: #6c757d;
        color: white;
        }

        /* Rejection Reason */
        .rejection-reason {
        background-color: #fff3cd;
        border-left: 3px solid #ffc107;
        padding: 10px;
        margin: 15px 0;
        font-size: 14px;
        }

        /* Buttons */
        .btn-buynow,
        .edit-btn,
        .remove-btn {
        padding: 10px 20px;
        border: 1px solid #ddd;
        border-radius: 20px;
        background: white;
        cursor: pointer;
        font-weight: bold;
        transition: all 0.3s ease;
        }

        .btn-buynow:hover {
        background: #2CB736;
        color: white;
        }

        .edit-btn:hover,
        .remove-btn:hover {
        background: #FEBA00;
        color: white;
        }

        /* Modal */
        .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 20px;
        width: 80%;
        max-width: 500px;
        border-radius: 10px;
        position: relative;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }

        .close-btn {
        position: absolute;
        top: 10px;
        right: 15px;
        font-size: 24px;
        font-weight: bold;
        cursor: pointer;
        }

        .close-btn:hover {
        color: red;
        }

        /* Agent Card */
        .agent-info {
        margin-top: 30px;
        }

        .agent-card {
        display: flex;
        background-color: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
        }

        .agent-photo {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        margin-right: 20px;
        object-fit: cover;
        }

        .agent-details h3 {
        margin-top: 0;
        margin-bottom: 10px;
        }

        .phone {
        color: #666;
        }

        /* Product Specifications */
        .property-specifications {
        margin-top: 20px;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 10px;
        }

        .property-specifications h3 {
        margin-top: 0;
        margin-bottom: 15px;
        border-bottom: 1px solid #ddd;
        padding-bottom: 10px;
        }

        /* Description */
        .description-section {
        margin-top: 20px;
        max-width: 100%;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal;
        flex-shrink: 1;
        min-width: 0;
        }

        /* Responsive */
        @@media (max-width: 768px) {
        .main-content

        {
        flex-direction: column;
        }

        .image-gallery,
        .property-details {
        flex: 0 0 100%;
        }

        }
        .price {
        font-size: 24px;
        font-weight: bold;
        color: #0066cc;
        }
        .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
        }

        .listing-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        }

        .listing-header h1 {
        margin: 0;
        font-size: 24px;
        flex: 1;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal;
        flex-shrink: 1;
        min-width: 0;
        }
        .logo img {
        width: 120px;
        height: 50px;
        object-fit: cover;
        border-radius: 8px;
        }
        .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        border-radius: 10px;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }

        .close-btn {
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
        }

        .close-btn:hover {
        color: red;
        }

        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
        }

        input[type=number] {
        -moz-appearance: textfield;
        }

        .listing-status {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 14px;
        font-weight: bold;
        margin-left: 15px;
        }

        .pending {
        background-color: #ffc107;
        color: #212529;
        }

        .approved {
        background-color: #28a745;
        color: white;
        }

        .rejected {
        background-color: #dc3545;
        color: white;
        }

        .sold {
        background-color: #17a2b8;
        color: white;
        }

        .archived {
        background-color: #6c757d;
        color: white;
        }

        .rejection-reason {
        background-color: #fff3cd;
        border-left: 3px solid #ffc107;
        padding: 10px;
        margin: 15px 0;
        font-size: 14px;
        }

        .btn-buynow {
        padding: 8px 16px;
        border: 1px solid #ddd;
        border-radius: 20px;
        background: white;
        cursor: pointer;
        }

        .btn-buynow:hover {
        background: #2CB736;
        transition: 0.3s;
        color: white;
        }

        .edit-btn, .remove-btn {
        margin-right: 10px;
        padding: 8px 16px;
        border: none;
        border-radius: 50px;
        cursor: pointer;
        font-weight: bold;
        color: black;
        }

        .edit-btn:hover, .remove-btn:hover {
        background: #FEBA00;
        transition: 0.3s;
        color: white;
        }

        #editModal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        justify-content: center;
        align-items: center;
        }

        #editModal .modal-content {
        background: white;
        padding: 30px;
        border-radius: 10px;
        width: 60%;
        max-height: 90%;
        overflow: auto;
        position: relative;
        }

        #editModal input,
        #editModal textarea,
        #editModal select {
        width: 100%;
        padding: 15px;
        margin-top: 5px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 50px;
        box-sizing: border-box;
        }

        #editModal button {
        padding: 10px 20px;
        margin-left: 10px;
        border-radius: 50px;
        color: black;
        cursor: pointer;
        }

        #editModal button:hover {
        background: #FEBA00;
        color: white;
        }

        .property-specifications {
        margin-top: 20px;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 10px;
        }

        .property-specifications h3 {
        margin-top: 0;
        margin-bottom: 15px;
        border-bottom: 1px solid #ddd;
        padding-bottom: 10px;
        }

        .main-content {
        display: flex;
        gap: 30px;
        margin-bottom: 30px;
        flex-wrap: wrap;
        }

        .image-gallery {
        flex: 0 0 60%;
        }

        .thumbnail-container {
        display: flex;
        gap: 10px;
        overflow-x: auto;
        padding-bottom: 10px;
        }
    </style>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <br />
    <br />
    <br />
    <br />
    <div class="container" style="max-width:1200px">
        <div class="listing-header">
            <h1>@Model.Title <span class="listing-status @Model.Status.ToString().ToLower()">@Model.Status</span></h1>
            <div class="price">@Model.Price.ToString("C")</div>
        </div>

        @if (Model.Status == PrimeMarket.Models.Enum.ListingStatus.Rejected && !string.IsNullOrEmpty(Model.RejectionReason))
        {
            <div class="rejection-reason">
                <strong>Rejection Reason:</strong> @Model.RejectionReason
            </div>
        }

        <div class="main-content">
            <div class="image-gallery">
                @if (Model.Images != null && Model.Images.Any())
                {
                    var mainImage = Model.Images.FirstOrDefault(i => i.IsMainImage)?.ImagePath ?? Model.Images.First().ImagePath;
                    <img src="@mainImage" alt="@Model.Title" class="main-image" id="main-image">

                    <div class="thumbnail-container">
                        @foreach (var image in Model.Images)
                        {
                            <img src="@image.ImagePath" alt="@Model.Title" class="thumbnail" onclick="changeMainImage('@image.ImagePath')">
                        }
                    </div>
                }
                else
                {
                    <img src="/images/placeholder.png" alt="No Image Available" class="main-image">
                }
            </div>

            <div class="property-details">
                <div class="detail-item">
                    <span class="label">Listing No:</span>
                    <span class="value">#@Model.Id</span>
                </div>
                @if (Model.Condition.Equals("First-Hand"))
                {
                    <div class="detail-item">
                        <span class="label">Stock Count:</span>
                        <span class="value">@Model.Stock</span>
                    </div>
                }
                <div class="detail-item">
                    <span class="label">Condition:</span>
                    <span class="value">@Model.Condition</span>
                </div>
                <div class="detail-item">
                    <span class="label">Category:</span>
                    <span class="value">@Model.Category</span>
                </div>
                <div class="detail-item">
                    <span class="label">Subcategory:</span>
                    <span class="value">@Model.SubCategory</span>
                </div>
                @if (!string.IsNullOrEmpty(Model.DetailCategory))
                {
                    <div class="detail-item">
                        <span class="label">Detail Category:</span>
                        <span class="value">@Model.DetailCategory</span>
                    </div>
                }
                <div class="detail-item">
                    <span class="label">Location:</span>
                    <span class="value">@Model.Location</span>
                </div>
                <div class="detail-item">
                    <span class="label">Listed Date:</span>
                    <span class="value">@(((DateTime)Model.CreatedAt).ToString("MMMM dd, yyyy"))</span>
                </div>
                @if (Model.UpdatedAt != null)
                {
                    <div class="detail-item">
                        <span class="label">Last Updated:</span>
                        <span class="value">@(((DateTime)Model.UpdatedAt).ToString("MMMM dd, yyyy"))</span>
                    </div>
                }
            </div>
        </div>

        @if (ViewBag.Product != null)
        {
            <div class="property-specifications">
                <h3>Product Specifications</h3>
                @foreach (var prop in ViewBag.Product.GetType().GetProperties())
                {
                    if (prop.Name != "Id" && prop.Name != "ListingId" && prop.Name != "Listing")
                    {
                        var value = prop.GetValue(ViewBag.Product);
                        if (value != null && !string.IsNullOrEmpty(value.ToString()))
                        {
                            <div class="detail-item">
                                <span class="label">@prop.Name:</span>
                                <span class="value">@value</span>
                            </div>
                        }
                    }
                }
            </div>
        }

        <div style="margin-top: 20px;">
            <h3>Description</h3>
            <p style="margin-bottom: 30px;
            max-width: 100%;
            word-wrap: break-word;
            overflow-wrap: break-word;
            white-space: normal;
            flex-shrink: 1;
            min-width: 0;">@Html.Raw(Model.Description.Replace("\n", "<br>"))</p>
        </div>

        <div class="agent-info">
            <div class="agent-card">
                <img src="@(string.IsNullOrEmpty(Model.Seller?.ProfileImagePath) ? "/images/PrimeMarket_Logo_V2.png" : Model.Seller.ProfileImagePath)"
                alt="Seller" class="agent-photo">
                <div class="agent-details">
                    <h3>Seller Information</h3>
                    <p class="phone">@Model.Seller?.FirstName @Model.Seller?.LastName</p>
                    <p>@Model.Seller?.Email</p>
                </div>
            </div>
        </div>

        <div style="margin-top:25px; display:flex; justify-content:center; gap: 15px;">
            @if (Model.Status != PrimeMarket.Models.Enum.ListingStatus.Sold)
            {

                <a href="@Url.Action("EditListing", "Listing", new { id = Model.Id })" class="edit-btn">Edit</a>


                <form id="deleteForm" method="post" action="@Url.Action("DeleteListing", "Listing")">
                    @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id">
                <button type="submit" class="remove-btn" onclick="return confirm('Are you sure you want to delete this listing?')">
                    Delete
                </button>
            </form>
            }
        </div>
    </div>

    <script>
        function changeMainImage(imageSrc) {
            document.getElementById('main-image').src = imageSrc;
        }
    </script>
</body>
</html>