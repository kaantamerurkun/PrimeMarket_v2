@model PrimeMarket.Models.Listing
@{
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    ViewData["Title"] = "My Listing";
}
<html lang="en">
<body>
    <style>
        .logo img {
            width: 120px;
            height: 50px;
            object-fit: cover;
            border-radius: 8px;
        }

        .verified-badge {
            display: inline-flex;
            align-items: center;
            margin-left: 8px;
        }

            .verified-badge img {
                width: 16px;
                height: 16px;
            }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .breadcrumb {
            display: flex;
            margin-bottom: 20px;
            font-size: 14px;
            color: #666;
        }

            .breadcrumb a {
                color: #0066cc;
                text-decoration: none;
                margin: 0 5px;
            }

                .breadcrumb a:first-child {
                    margin-left: 0;
                }

                .breadcrumb a:hover {
                    text-decoration: underline;
                }

        .listing-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .listing-header h1 {
                margin: 0;
                font-size: 24px;
                flex: 1;
            }

        .price {
            font-size: 24px;
            font-weight: bold;
            color: #0066cc;
        }

        .main-content {
            display: flex;
            gap: 30px;
            margin-bottom: 30px;
        }

        .image-gallery {
            flex: 0 0 60%;
        }

        .main-image {
            width: 100%;
            height: 400px;
            object-fit: cover;
            border-radius: 10px;
            margin-bottom: 10px;
        }

        .thumbnail-container {
            display: flex;
            gap: 10px;
            overflow-x: auto;
            padding-bottom: 10px;
        }

        .thumbnail {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 5px;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

            .thumbnail:hover {
                transform: scale(1.05);
            }

        .property-details {
            flex: 0 0 35%;
        }

        .detail-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #f0f0f0;
        }

        .label {
            font-weight: bold;
            color: #555;
        }

        .value {
            color: #333;
        }

        .btn-bookmark, .btn-buynow, .btn-cart, .btn-makeoffer, .btn-outofstock, .edit-btn, .remove-btn {
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 20px;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .btn-bookmark:hover {
                background: #f0f0f0;
            }

            .btn-buynow:hover {
                background: #2CB736;
                color: white;
            }

            .btn-cart:hover {
                background: #0066cc;
                color: white;
            }

            .btn-makeoffer:hover, .edit-btn:hover, .remove-btn:hover {
                background: #FEBA00;
                color: white;
            }

        .btn-outofstock {
            background: #f8f9fa;
            color: #6c757d;
            cursor: not-allowed;
        }

        .product-specifications {
            margin-bottom: 30px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
        }

            .product-specifications h3 {
                margin-top: 0;
                margin-bottom: 15px;
                border-bottom: 1px solid #ddd;
                padding-bottom: 10px;
            }

        .description-section {
            margin-bottom: 30px;
            max-width: 100%;
            word-wrap: break-word;
            overflow-wrap: break-word;
            white-space: normal;
            flex-shrink: 1;
            min-width: 0;
        }

            .description-section h3 {
                margin-bottom: 15px;
            }

        .description-content {
            line-height: 1.6;
        }

        .seller-info {
            margin-bottom: 30px;
        }

        .seller-card {
            display: flex;
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
        }

        .seller-photo {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            margin-right: 20px;
            object-fit: cover;
        }

        .seller-details h3 {
            margin-top: 0;
            margin-bottom: 10px;
            display: inline-flex;
            align-items: center;
        }

            .seller-details h3 a {
                text-decoration: none;
                color: inherit;
            }

                .seller-details h3 a:hover {
                    text-decoration: underline;
                }

        .phone {
            margin-bottom: 15px;
            color: #666;
        }

        .btn-sendmessage, .btn-makeoffer, .btn-accept, .btn-reject {
            padding: 8px 15px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            margin-right: 10px;
            font-size: 14px;
        }

        .btn-sendmessage {
            background-color: #0066cc;
            color: white;
        }

        .btn-makeoffer {
            background-color: #f0f0f0;
            color: #333;
        }

        .btn-accept {
            background-color: #28a745;
            color: white;
        }

        .btn-reject {
            background-color: #dc3545;
            color: white;
        }

        .btn-sendmessage:hover {
            background-color: #0055b3;
        }

        .btn-makeoffer:hover {
            background-color: #e0e0e0;
        }

        .btn-accept:hover {
            background-color: #218838;
        }

        .btn-reject:hover {
            background-color: #c82333;
        }

        .owner-badge {
            display: inline-block;
            padding: 5px 10px;
            background-color: #f0f0f0;
            color: #666;
            border-radius: 15px;
            font-size: 14px;
        }

        .listing-status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 14px;
            font-weight: bold;
            margin-left: 15px;
        }

        .pending {
            background-color: #ffc107;
            color: #212529;
        }

        .approved {
            background-color: #28a745;
            color: white;
        }

        .rejected {
            background-color: #dc3545;
            color: white;
        }

        .sold {
            background-color: #17a2b8;
            color: white;
        }

        .archived {
            background-color: #6c757d;
            color: white;
        }

        .rejection-reason {
            background-color: #fff3cd;
            border-left: 3px solid #ffc107;
            padding: 10px;
            margin: 15px 0;
            font-size: 14px;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: white;
            margin: 10% auto;
            padding: 20px;
            width: 80%;
            max-width: 500px;
            border-radius: 10px;
            position: relative;
        }

        .close-btn {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
        }

        /* Responsive design */
        @@media (max-width: 768px) {
            .main-content

        {
            flex-direction: column;
        }

        .image-gallery {
            flex: 0 0 100%;
        }

        .property-details {
            flex: 0 0 100%;
        }

        }</style>
    <div class="container" style="margin-top: 120px; margin-bottom: 50px;">

        <div class="listing-header">
            <h1 style="margin-bottom: 30px;
            max-width: 100%;
            word-wrap: break-word;
            overflow-wrap: break-word;
            white-space: normal;
            flex-shrink: 1;
            min-width: 0; ">
                @Model.Title <span class="listing-status @Model.Status.ToString().ToLower()">@Model.Status</span>
            </h1>
            <div class="price">@Model.Price.ToString("C")</div>
        </div>

        @if (Model.Status == PrimeMarket.Models.Enum.ListingStatus.Rejected && !string.IsNullOrEmpty(Model.RejectionReason))
        {
            <div class="rejection-reason">
                <strong>Rejection Reason:</strong> @Model.RejectionReason
            </div>
        }

        <div class="main-content">
            <div class="image-gallery">
                @if (Model.Images != null && Model.Images.Any())
                {
                    var mainImage = Model.Images.FirstOrDefault(i => i.IsMainImage)?.ImagePath ?? Model.Images.First().ImagePath;
                    <img src="@mainImage" alt="@Model.Title" class="main-image" id="main-image">

                    <div class="thumbnail-container">
                        @foreach (var image in Model.Images)
                        {
                            <img src="@image.ImagePath" alt="@Model.Title" class="thumbnail" onclick="changeMainImage('@image.ImagePath')">
                        }
                    </div>
                }
                else
                {
                    <img src="/images/placeholder.png" alt="No Image Available" class="main-image">
                }
            </div>

            <div class="property-details">
                <div class="detail-item">
                    <span class="label">Listing No:</span>
                    <span class="value">#@Model.Id</span>
                </div>
                @if (Model.Condition.Equals("First-Hand"))
                {
                    <div class="detail-item">
                        <span class="label">Stock Count:</span>
                        <span class="value">@Model.Stock</span>
                    </div>
                }
                <div class="detail-item">
                    <span class="label">Condition:</span>
                    <span class="value">@Model.Condition</span>
                </div>
                <div class="detail-item">
                    <span class="label">Category:</span>
                    <span class="value">@Model.Category</span>
                </div>
                @if (!string.IsNullOrEmpty(Model.SubCategory))
                {
                    <div class="detail-item">
                        <span class="label">Subcategory:</span>
                        <span class="value">@Model.SubCategory</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.DetailCategory))
                {
                    <div class="detail-item">
                        <span class="label">Detail Category:</span>
                        <span class="value">@Model.DetailCategory</span>
                    </div>
                }
                <div class="detail-item">
                    <span class="label">Location:</span>
                    <span class="value">@Model.Location</span>
                </div>
                <div class="detail-item">
                    <span class="label">Listed Date:</span>
                    <span class="value">@(((DateTime)Model.CreatedAt).ToString("MMMM dd, yyyy"))</span>
                </div>
                @if (Model.UpdatedAt != null)
                {
                    <div class="detail-item">
                        <span class="label">Last Updated:</span>
                        <span class="value">@(((DateTime)Model.UpdatedAt).ToString("MMMM dd, yyyy"))</span>
                    </div>
                }
                <div style="margin-top:15px; padding:15px; background-color:#f0f8ff; border-radius:10px; border: none">
                    <h3 style="margin-top:0; margin-bottom:15px; font-size:18px; color:#333;">Listing Statistics</h3>
                    <div style="display:flex; justify-content:space-between; flex-wrap:wrap;">
                        <div style="flex: 1; min-width:150px; margin-bottom:10px;">
                            <div style="display:flex; align-items:center;">
                                <img src="/images/bookmark-button.png" alt="Bookmarks" style="width:20px;height:20px" />
                                <span style="font-weight:bold; color:#555;">Bookmarks:</span>
                                <span style="margin-left:8px; color:#333; font-weight:bold;">@await Component.InvokeAsync("BookmarkCount", new { listingId = Model.Id })</span>
                            </div>
                        </div>
                        <div style="flex: 1; min-width:150px; margin-bottom:10px;">
                            <div style="display:flex; align-items:center;">
                                <img src="/images/view-icon.png" alt="Views" style="width:20px;height:20px" />
                                <span style="font-weight:bold; color:#555;">Views:</span>
                                <span style="margin-left:8px; color:#333; font-weight:bold;">@(Model.ViewCount ?? 0)</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (ViewBag.Product != null)
        {
            <div class="product-specifications">
                <h3>Product Specifications</h3>
                @foreach (var prop in ViewBag.Product.GetType().GetProperties())
                {
                    if (prop.Name != "Id" && prop.Name != "ListingId" && prop.Name != "Listing")
                    {
                        var value = prop.GetValue(ViewBag.Product);
                        if (value != null && !string.IsNullOrEmpty(value.ToString()))
                        {
                            <div class="detail-item">
                                <span class="label">@prop.Name:</span>
                                <span class="value">@value</span>
                            </div>
                        }
                    }
                }
            </div>
        }

        <div class="description-section">
            <h3>Description</h3>
            <div class="description-content">
                @Html.Raw(Model.Description.Replace("\n", "<br>"))
            </div>
        </div>

        <div class="seller-info">
            <div class="seller-card">
                <img src="@(string.IsNullOrEmpty(Model.Seller?.ProfileImagePath) ? "/images/placeholder.png" : Model.Seller.ProfileImagePath)"
                     alt="Seller" class="seller-photo">
                <div class="seller-details">
                    <h3>Seller Information</h3>
                    <p class="phone">@Model.Seller?.FirstName @Model.Seller?.LastName</p>
                    <p>@Model.Seller?.Email</p>
                </div>
            </div>
        </div>

        <div style="margin-top:25px; display:flex; justify-content:center; gap: 15px;">
            @if (Model.Status != PrimeMarket.Models.Enum.ListingStatus.Sold && Model.Status != PrimeMarket.Models.Enum.ListingStatus.Pending)
            {
                <a href="@Url.Action("EditListing", "Listing", new { id = Model.Id })">
                    <button class="edit-btn">Edit</button>
                </a>

                <form id="deleteForm" method="post" action="@Url.Action("DeleteListing", "Listing")">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id">
                    <button type="submit" class="remove-btn" onclick="return confirm('Are you sure you want to delete this listing?')">
                        Delete
                    </button>
                </form>
            }
        </div>
    </div>

    <script>
        function changeMainImage(imageSrc) {
            document.getElementById('main-image').src = imageSrc;
        }

        // Notification helper
        function showNotification(message) {
            const notification = document.createElement('div');
            notification.className = 'notification';
            notification.textContent = message;
            notification.style.position = 'fixed';
            notification.style.bottom = '20px';
            notification.style.right = '20px';
            notification.style.backgroundColor = '#28a745';
            notification.style.color = 'white';
            notification.style.padding = '10px 20px';
            notification.style.borderRadius = '5px';
            notification.style.boxShadow = '0 2px 10px rgba(0,0,0,0.2)';
            notification.style.zIndex = '9999';
            notification.style.transition = 'opacity 0.5s ease-in-out';

            document.body.appendChild(notification);

            // Remove after 3 seconds
            setTimeout(() => {
                notification.style.opacity = '0';
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 500);
            }, 3000);
        }
    </script>
</body>
</html>