@model List<PrimeMarket.Models.ViewModel.OfferViewModel>
@{
    ViewData["Title"] = "My Offers";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="container" style="margin-top: 120px; margin-bottom: 50px;">
    <h1>My Offers</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (Model.Count == 0)
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-handshake"></i>
            </div>
            <h3>No Offers Found</h3>
            <p>You haven't made any offers on second-hand listings yet.</p>
            <a href="@Url.Action("Index", "Listing")" class="btn btn-primary">Browse Listings</a>
        </div>
    }
    else
    {
        <div class="offers-container">
            @foreach (var offer in Model)
            {
                <div class="offer-card">
                    <div class="offer-image">
                        <a href="@Url.Action("Details", "Listing", new { id = offer.ListingId })">
                            <img src="@offer.ListingImage" alt="@offer.ListingTitle" />
                        </a>
                    </div>
                    <div class="offer-info">
                        <h3>
                            <a href="@Url.Action("Details", "Listing", new { id = offer.ListingId })">
                                @offer.ListingTitle
                            </a>
                        </h3>
                        <p class="seller">Seller: @offer.SellerName</p>
                        <p class="original-price">Original Price: @offer.OriginalPrice.ToString("C")</p>
                        <p class="offer-amount">Your Offer: @offer.OfferAmount.ToString("C")</p>
                        <p class="offer-date">Offered on: @offer.CreatedAt.ToString("MMM dd, yyyy")</p>

                        @if (offer.Status == PrimeMarket.Models.Enum.OfferStatus.Pending)
                        {
                            <div class="offer-status pending">
                                <span class="status-indicator"></span>
                                Pending
                            </div>
                            <div class="offer-actions">
                                <a href="@Url.Action("Details", "Listing", new { id = offer.ListingId })" class="btn-view">View Listing</a>
                                <button class="btn-cancel-offer" data-offer-id="@offer.OfferId">Cancel Offer</button>
                            </div>
                        }
                        else if (offer.Status == PrimeMarket.Models.Enum.OfferStatus.Accepted)
                        {
                            <div class="offer-status accepted">
                                <span class="status-indicator"></span>
                                Accepted
                            </div>
                            <div class="offer-actions">
                                <a href="@Url.Action("Details", "Listing", new { id = offer.ListingId })" class="btn-view">View Listing</a>
                                <a href="@Url.Action("ProcessOfferPurchase", "Payment", new { offerId = offer.OfferId })" class="btn-complete-purchase">Complete Purchase</a>
                            </div>
                        }
                        else if (offer.Status == PrimeMarket.Models.Enum.OfferStatus.Rejected)
                        {
                            <div class="offer-status rejected">
                                <span class="status-indicator"></span>
                                Rejected
                            </div>
                            <div class="offer-actions">
                                <a href="@Url.Action("Details", "Listing", new { id = offer.ListingId })" class="btn-view">View Listing</a>
                            </div>
                        }
                        else if (offer.Status == PrimeMarket.Models.Enum.OfferStatus.Cancelled)
                        {
                            <div class="offer-status canceled">
                                <span class="status-indicator"></span>
                                Canceled
                            </div>
                            <div class="offer-actions">
                                <a href="@Url.Action("Details", "Listing", new { id = offer.ListingId })" class="btn-view">View Listing</a>
                            </div>
                        }
                        else if (offer.Status == PrimeMarket.Models.Enum.OfferStatus.Purchased)
                        {
                            <div class="offer-status purchased">
                                <span class="status-indicator"></span>
                                Purchased
                            </div>
                            <div class="offer-actions">
                                <a href="@Url.Action("Details", "Listing", new { id = offer.ListingId })" class="btn-view">View Listing</a>
                                <a href="@Url.Action("MyPurchase", "Payment")" class="btn-view-purchase">View Purchase</a>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

<div id="cancelOfferModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h3>Cancel Offer</h3>
        <p>Are you sure you want to cancel this offer?</p>
        <div class="modal-actions">
            <button id="confirmCancel" class="btn-confirm">Yes, Cancel</button>
            <button id="closeModal" class="btn-cancel">No, Keep Offer</button>
        </div>
    </div>
</div>

<style>
    .offers-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .offer-card {
        display: flex;
        background-color: #f8f9fa;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .offer-image {
        flex: 0 0 180px;
        position: relative;
        overflow: hidden;
    }

        .offer-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .offer-info {
        flex: 1;
        padding: 20px;
        position: relative;
    }

        .offer-info h3 {
            margin: 0 0 10px 0;
            font-size: 18px;
        }

            .offer-info h3 a {
                color: #333;
                text-decoration: none;
            }

                .offer-info h3 a:hover {
                    color: #0066cc;
                }

    .seller, .original-price, .offer-amount, .offer-date {
        margin: 5px 0;
        color: #555;
    }

    .offer-amount {
        font-weight: bold;
        color: #0066cc;
    }

    .offer-status {
        display: inline-flex;
        align-items: center;
        margin-top: 10px;
        padding: 5px 10px;
        border-radius: 15px;
        font-weight: 500;
        font-size: 14px;
    }

    .status-indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        margin-right: 6px;
    }

    .offer-status.pending {
        background-color: #fff4dd;
        color: #f9a825;
    }

        .offer-status.pending .status-indicator {
            background-color: #f9a825;
        }

    .offer-status.accepted {
        background-color: #e3f9e5;
        color: #28a745;
    }

        .offer-status.accepted .status-indicator {
            background-color: #28a745;
        }

    .offer-status.rejected {
        background-color: #ffe5e5;
        color: #dc3545;
    }

        .offer-status.rejected .status-indicator {
            background-color: #dc3545;
        }

    .offer-status.canceled {
        background-color: #e5e5e5;
        color: #6c757d;
    }

        .offer-status.canceled .status-indicator {
            background-color: #6c757d;
        }

    .offer-status.purchased {
        background-color: #e3e9ff;
        color: #0d6efd;
    }

        .offer-status.purchased .status-indicator {
            background-color: #0d6efd;
        }

    .offer-actions {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .btn-view, .btn-cancel-offer, .btn-complete-purchase, .btn-view-purchase {
        padding: 8px 16px;
        border-radius: 5px;
        font-size: 14px;
        cursor: pointer;
        text-decoration: none;
        text-align: center;
    }

    .btn-view {
        background-color: #f0f0f0;
        color: #333;
        border: 1px solid #ddd;
    }

    .btn-cancel-offer {
        background-color: #ffe5e5;
        color: #dc3545;
        border: 1px solid #ffc5c5;
    }

    .btn-complete-purchase {
        background-color: #0066cc;
        color: white;
        border: none;
    }

    .btn-view-purchase {
        background-color: #e3e9ff;
        color: #0d6efd;
        border: 1px solid #d1dcff;
    }

    .empty-state {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        padding: 60px 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
        margin-top: 20px;
    }

    .empty-icon {
        font-size: 48px;
        color: #ccc;
        margin-bottom: 20px;
    }

    .empty-state h3 {
        margin: 0 0 10px 0;
        font-size: 22px;
    }

    .empty-state p {
        margin: 0 0 20px 0;
        color: #666;
    }

    .alert {
        padding: 12px 15px;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
    }

    .modal-content {
        background-color: #fff;
        margin: 15% auto;
        padding: 25px;
        border-radius: 10px;
        width: 400px;
        max-width: 90%;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover {
            color: #333;
        }

    .modal-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .btn-confirm {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-cancel {
        background-color: #f0f0f0;
        color: #333;
        border: 1px solid #ddd;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
    }

    /* Responsive styles */
    @@media (max-width: 768px) {
        .offer-card

    {
        flex-direction: column;
    }

    .offer-image {
        flex: 0 0 180px;
        width: 100%;
    }

    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const modal = document.getElementById('cancelOfferModal');
        const btnsCancel = document.querySelectorAll('.btn-cancel-offer');
        const btnClose = document.querySelector('.close');
        const btnCloseModal = document.getElementById('closeModal');
        const btnConfirm = document.getElementById('confirmCancel');
        let currentOfferId = null;

        // Open modal when cancel button is clicked
        btnsCancel.forEach(btn => {
            btn.addEventListener('click', function() {
                currentOfferId = this.getAttribute('data-offer-id');
                modal.style.display = 'block';
            });
        });

        // Close modal when X is clicked
        if (btnClose) {
            btnClose.addEventListener('click', function() {
                modal.style.display = 'none';
            });
        }

        // Close modal when "No, Keep Offer" is clicked
        if (btnCloseModal) {
            btnCloseModal.addEventListener('click', function() {
                modal.style.display = 'none';
            });
        }

        // Handle offer cancellation
        if (btnConfirm) {
            btnConfirm.addEventListener('click', function() {
                if (currentOfferId) {
                    // Create a form to submit the POST request
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = '/User/CancelOffer';

                    // Add CSRF token
                    const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (csrfToken) {
                        const tokenInput = document.createElement('input');
                        tokenInput.type = 'hidden';
                        tokenInput.name = '__RequestVerificationToken';
                        tokenInput.value = csrfToken.value;
                        form.appendChild(tokenInput);
                    }

                    // Add the offer ID
                    const offerIdInput = document.createElement('input');
                    offerIdInput.type = 'hidden';
                    offerIdInput.name = 'offerId';
                    offerIdInput.value = currentOfferId;
                    form.appendChild(offerIdInput);

                    // Append the form to the document and submit it
                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }

        // Close modal when clicking outside of it
        window.addEventListener('click', function(event) {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        });
    });
</script>